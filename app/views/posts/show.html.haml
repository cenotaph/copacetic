.blogpost
  %p.blogtitle= h @post.title
  %span.blogmeta
    Posted by #{h @post.admin_user.username} on #{h @post.created_at.strftime("%d %B %H:%m")} (#{time_ago_in_words @post.created_at} ago)
  %br/
  .blogbody
    = @post.body
    - if is_admin?
      = link_to 'Edit this post', edit_post_path(@post)
      %br/
    %a{:name => "comments"}
    - if @post.comments.size > 0
      %span.item_title
        = @post.comments.size
        comments:
      %br/
    - for comment in @post.comments
      .blog_comment
        - next unless (comment.approved == true)
        .item_timestamp
          %i
            Posted on #{comment.date.strftime("%d %b %Y %H:%M")} by
            - if (User.find_by_id(comment.user_id) != nil)
              = User.find(comment.user_id).name.blank? ? User.find(comment.user_id).login : User.find(comment.user_id).name
            - else
              user ##{h comment.user_id}
            \:
        .item_comment= h comment.post
        %br/
        %br/
    - if current_user
      - if (@post.comments.size == 0)
        Be the first to comment on '
        %i>
          '#{h @post['title']}
        ':
        %br/
      - else
        Leave a comment on #{h @post['title']}!
      - @comment = Comment.new
      - end
      #commentbox
        - form_tag '/posts/add_comment/' + @post.id.to_s do
          %p
            %label{:for => "post_comment"} Comment
            %br/
            = text_area 'comment', 'post'
          = submit_tag "Post"
    - else
      You must be logged in to comment.
      %br/
      = link_to("Sign up", {:controller => 'user', :action => 'signup'})
      for an account or
      \#{link_to("log in", {:controller => 'user', :action => 'login'})} to an existing account.
    %br{:clear => "all"}/
  %br/
  - if is_admin?
    = link_to 'New post', new_post_path
